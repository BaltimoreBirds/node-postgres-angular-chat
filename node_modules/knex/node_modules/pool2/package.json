{
  "name": "pool2",
  "version": "1.1.5",
  "repository": {
    "type": "git",
    "url": "http://github.com/myndzi/pool2"
  },
  "description": "Resource pool built with database drivers in mind",
  "keywords": [
    "database",
    "pool",
    "cluster"
  ],
  "main": "index.js",
  "scripts": {
    "bamp": "bamp",
    "test": "NODE_ENV=testing mocha -u bdd -R spec --bail test/*.test.js;jshint lib/*.js",
    "cov": "NODE_ENV=testing istanbul cover node_modules/.bin/_mocha -- -u bdd -R spec --bail test/*.test.js;jshint lib/*.js"
  },
  "author": {
    "name": "Kris Reeves"
  },
  "license": "ISC",
  "dependencies": {
    "debug": "^2.1.3",
    "double-ended-queue": "^2.1.0-0",
    "hashmap": "^2.0.1"
  },
  "devDependencies": {
    "bamp": "^1.0.11",
    "istanbul": "^0.3.6",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0",
    "should": "^5.0.0"
  },
  "readme": "# Pool2\n\nA generic resource pool\n\n## Usage\n\n    var Pool = require('pool2');\n    var pool = new Pool({\n        acquire: function (cb) { cb(null, resource); },\n        acquireTimeout: 30*1000,\n\n        dispose: function (res, cb) { cb(); },\n        disposeTimeout: 30*1000,\n\n        destroy: function () { },\n\n        ping: function (res, cb) { cb(); },\n        pingTimeout: 10*1000,\n\n        capabilities: ['tags'],\n\n        min: 0,\n        max: 10,\n\n        idleTimeout: 60*1000,\n        syncInterval: 10*1000\n    });\n\n    pool.acquire(function (err, rsrc) {\n        // do stuff\n        pool.release(rsrc);\n    });\n\n    pool.stats();\n    /* {\n        min: 0,\n        max: 10,\n        allocated: 0,\n        available: 0,\n        queued: 0,\n        maxRequests: Infinity\n    } */\n\n    pool.remove(rsrc);\n    pool.destroy(rsrc);\n\n    pool.end(function (errs) {\n        // errs is null or an array of errors from resources that were released\n    });\n\n    pool._destroyPool();\n\n\n## Clustering\n\n    var pool1 = new Pool(opts1),\n        pool2 = new Pool(opts2);\n        \n    var cluster = new Pool.Cluster([pool1, pool2]);\n    \n    cluster.acquire(function (err, rsrc) {\n        // do stuff\n        cluster.release(rsrc);\n    });\n    \n    cluster.acquire('read', function (err, rsrc) {\n        // if you specify a capability, only pools tagged with that capability\n        // will be used to serve the request\n    });\n    \n    cluster.addPool(new Pool(...));\n    var pool = cluster.pools[0];\n    cluster.removePool(pool);\n    \n    cluster.end(function (errs) {\n        // errs is an array of errors returned from ending the pools\n    });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/myndzi/pool2/issues"
  },
  "homepage": "https://github.com/myndzi/pool2",
  "_id": "pool2@1.1.5",
  "dist": {
    "shasum": "31918ae27bdc27cb84c3670cad25b80656e78235"
  },
  "_from": "pool2@^1.1.0",
  "_resolved": "https://registry.npmjs.org/pool2/-/pool2-1.1.5.tgz"
}
