{
  "name": "socket.io-express-session",
  "version": "0.1.2",
  "description": "Use express-session as socket.io middleware.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:xpepermint/socket.io-express-session.git"
  },
  "keywords": [
    "express",
    "socket",
    "session",
    "socket.io",
    "middleware",
    "connect"
  ],
  "author": {
    "name": "Xpepermint"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/xpepermint/socket.io-express-session/issues"
  },
  "homepage": "https://github.com/xpepermint/socket.io-express-session",
  "dependencies": {},
  "readme": "# [socket.io](http://socket.io/)-[express-session](https://github.com/expressjs/session)\n\n> Use express-session as socket.io middleware.\n\n## Setup\n\nAll you have to is adding a middleware like you would in your express app.\n\n```js\nvar ios = require('socket.io-express-session');\nvar session = ... configured express-session instance\n...\n\nio.use(ios(session));\n...\nio.on('connection', function(socket){\n  console.log(socket.handshake.session);\n});\n```\n\n## Example\n\n```js\n// initializing express-session middleware\nvar Session = require('express-session'),\n    SessionStore = require('session-file-store')(Session);\nvar session = Session({ secret: 'pass', resave: true, saveUninitialized: true });\n\n// creating new express app\nvar express = require('express');\nvar app = express();\napp.use(session); // session support\napp.get('/', function (req, res) {\n  req.session.uid = 1;\n  res.send('Hi user #' + req.session.uid);\n});\n\n// attaching express app to HTTP server\nvar http = require('http');\nvar server = http.createServer(app);\nserver.listen(process.env.PORT || '3000');\n\n// creating new socket.io app\nvar ios = require('socket.io-express-session');\nvar io = require('socket.io')(server);\nio.use(ios(session)); // session support\nio.on('connection', function(socket){\n  console.log(socket.handshake.session);\n});\n```\n\n**NOTE**: You should change the default MemoryStore session store. It is not designed for a production environment. If you do use the default store then you should pass the same session instance to express and io app (data are saved in memory).\n",
  "readmeFilename": "README.md",
  "_id": "socket.io-express-session@0.1.2",
  "dist": {
    "shasum": "eeeb674b7f5d1f25738f758512871840ae2a40cc"
  },
  "_from": "socket.io-express-session@",
  "_resolved": "https://registry.npmjs.org/socket.io-express-session/-/socket.io-express-session-0.1.2.tgz"
}
